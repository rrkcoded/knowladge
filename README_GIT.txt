git branch  - показує на якій локальній вітки ви зараз


git branch NAME - створити нову гілку


git branch -r - показує віддаленні вітки


git merge - для з'єднання гілок (git merge назва-гілки)


git status - дізнатися чи є не зафіксовані дії зараз


git checkout NAME - для переключення між гілками


git checkout -b NAME  - створює нову гілку і одразу переходить на неї


git add .  - підготовляє всі зміни перед коммітом


git add NAME - підготовляє вибрану зміну перед коммітом


git commit -m "Description of commit" - закріпити стадію/виправлення/зберегтися


git pull - загрузити всі віддаленні дані на свій локальний репозиторій


git push - загрузити всі локальні дані на віддалений репозиторій


git diff - для перегляду різниці між коммітами (подивитися які були зміни і тд)


git clone - для клонування/завантаження репозиторія с віддаленого сервера


git stash - дозволяє на якийсь час «здати в архів» (або відкласти) зміни, зроблені в робочій копії, щоб ви могли застосувати їх пізніше.


git stash apply - веертає данні які були прихованні коммандою git stash


git merge - для з'єднання гілок (git merge назва-гілки)


git log - показує історію коммітів


git init - Ініціалізує нове сховище Git. Створює невидиму папку .git у нашому репозиторії

git cherry-pick
Команда git cherry-pick берёт изменения, вносимые одним коммитом, и пытается повторно применить их в виде нового коммита в текущей ветке.










